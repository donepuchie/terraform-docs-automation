name: Terraform Build, Push to Artifact Registry, and Deploy to Cloud Run

on:
  push:
    paths:
      - '**/*.tf'               # Watch Terraform files
      - '**/Dockerfile'          # Watch Dockerfiles
      - '**/gcp/modules/**'      # Watch all files in gcp/modules

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    env:
      PROJECT_ID: ${{ secrets.GCP_PROJECT }}
      REGION: ${{ secrets.GCP_REGION }}
      REPO_NAME: ${{ secrets.ARTIFACT_REGISTRY_REPO }}
      SERVICE_ACCOUNT: ${{ secrets.GCP_SERVICE_ACCOUNT }}
      SERVICE_NAME: terraform-docs-service

    steps:
    # Authenticate to GCP using Workload Identity
    - name: Authenticate to GCP
      uses: google-github-actions/auth@v1
      with:
        workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
        service_account: ${{ env.SERVICE_ACCOUNT }}

    # Configure Docker to use Google Artifact Registry
    - name: Configure Docker for Artifact Registry
      run: gcloud auth configure-docker "${{ env.REGION }}-docker.pkg.dev"

    # Build and push Docker image to Google Artifact Registry
    - name: Build and Push Docker image to Artifact Registry
      uses: docker/build-push-action@v6
      with:
        file: ./apps/terraform-docs/Dockerfile  # Dockerfile location
        push: true
        tags: "${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO_NAME }}/terraform-docs:latest"

    # Deploy Docker image to Cloud Run
    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy ${{ env.SERVICE_NAME }} \
          --image=${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO_NAME }}/terraform-docs:latest \
          --region=${{ env.REGION }} \
          --platform=managed \
          --allow-unauthenticated \
          --set-traffic=latest=100

    # Send notification of deployment result
    - name: Notify GitHub of Deployment Success
      if: success()
      run: echo "Deployment succeeded."

    - name: Notify GitHub of Deployment Failure
      if: failure()
      run: echo "Deployment failed."

    # Clean up Docker system after build
    - name: Clean up Docker system
      run: docker system prune -f

